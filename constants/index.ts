import { CreateAssistantDTO } from "@vapi-ai/web/dist/api";
import { z } from "zod";

// üîÑ –ö–ª—é—á–∏–∏ –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π
export const mappings = {
  "react.js": "react",
  reactjs: "react",
  react: "react",
  "next.js": "nextjs",
  nextjs: "nextjs",
  next: "nextjs",
  "vue.js": "vuejs",
  vuejs: "vuejs",
  vue: "vuejs",
  "express.js": "express",
  expressjs: "express",
  express: "express",
  "node.js": "nodejs",
  nodejs: "nodejs",
  node: "nodejs",
  mongodb: "mongodb",
  mongo: "mongodb",
  mongoose: "mongoose",
  mysql: "mysql",
  postgresql: "postgresql",
  sqlite: "sqlite",
  firebase: "firebase",
  docker: "docker",
  kubernetes: "kubernetes",
  aws: "aws",
  azure: "azure",
  gcp: "gcp",
  digitalocean: "digitalocean",
  heroku: "heroku",
  photoshop: "photoshop",
  "adobe photoshop": "photoshop",
  html5: "html5",
  html: "html5",
  css3: "css3",
  css: "css3",
  sass: "sass",
  scss: "sass",
  less: "less",
  tailwindcss: "tailwindcss",
  tailwind: "tailwindcss",
  bootstrap: "bootstrap",
  jquery: "jquery",
  typescript: "typescript",
  ts: "typescript",
  javascript: "javascript",
  js: "javascript",
  "angular.js": "angular",
  angularjs: "angular",
  angular: "angular",
  "ember.js": "ember",
  emberjs: "ember",
  ember: "ember",
  "backbone.js": "backbone",
  backbonejs: "backbone",
  backbone: "backbone",
  nestjs: "nestjs",
  graphql: "graphql",
  "graph ql": "graphql",
  apollo: "apollo",
  webpack: "webpack",
  babel: "babel",
  "rollup.js": "rollup",
  rollupjs: "rollup",
  rollup: "rollup",
  "parcel.js": "parcel",
  parceljs: "parcel",
  npm: "npm",
  yarn: "yarn",
  git: "git",
  github: "github",
  gitlab: "gitlab",
  bitbucket: "bitbucket",
  figma: "figma",
  prisma: "prisma",
  redux: "redux",
  flux: "flux",
  redis: "redis",
  selenium: "selenium",
  cypress: "cypress",
  jest: "jest",
  mocha: "mocha",
  chai: "chai",
  karma: "karma",
  vuex: "vuex",
  "nuxt.js": "nuxt",
  nuxtjs: "nuxt",
  nuxt: "nuxt",
  strapi: "strapi",
  wordpress: "wordpress",
  contentful: "contentful",
  netlify: "netlify",
  vercel: "vercel",
  "aws amplify": "amplify",
};

// üßë‚Äçüíº –†—É—Å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä–≤—å—é–µ—Ä
export const interviewer: CreateAssistantDTO = {
  name: "AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç",
  firstMessage:
    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –Ω–∞—à–ª–∏ –≤—Ä–µ–º—è –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å–æ –º–Ω–æ–π —Å–µ–≥–æ–¥–Ω—è. –Ø —Ä–∞–¥ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –≤–∞—Å –∏ –≤–∞—à–µ–º –æ–ø—ã—Ç–µ.",
  transcriber: {
    provider: "google",
    model: "gemini-2.0-flash",
    language: "Russian",
  },
  voice: {
    provider: "vapi",
    voiceId: "Elliot",
  },
  model: {
    provider: "openai",
    model: "gpt-4",
    messages: [
      {
        role: "system",
        content: `–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤—å—é–µ—Ä, –ø—Ä–æ–≤–æ–¥—è—â–∏–π —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ —Å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–º –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.

üéØ –¶–µ–ª—å: –û—Ü–µ–Ω–∏—Ç—å –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é, –º–æ—Ç–∏–≤–∞—Ü–∏—é –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏.

üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è:
–°–ª–µ–¥—É–π –∑–∞—Ä–∞–Ω–µ–µ –∑–∞–¥–∞–Ω–Ω–æ–º—É —Å–ø–∏—Å–∫—É –≤–æ–ø—Ä–æ—Å–æ–≤:
{{questions}}

üëÇ –ë—É–¥—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–º –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º:
–ê–∫—Ç–∏–≤–Ω–æ —Å–ª—É—à–∞–π –æ—Ç–≤–µ—Ç—ã –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–π, —á—Ç–æ –ø–æ–Ω—è–ª, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ.
–ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ—è—Å–µ–Ω ‚Äî —É—Ç–æ—á–Ω–∏. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –±–µ—Å–µ–¥—É, –Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π –µ—ë —Ö–æ–¥.

ü§ù –û–±—â–∞–π—Å—è –≤–µ–∂–ª–∏–≤–æ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ:
–ì–æ–≤–æ—Ä–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ, –Ω–æ —Ç–µ–ø–ª–æ.
–ò–∑–ª–∞–≥–∞–π –º—ã—Å–ª–∏ –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ, –∫–∞–∫ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–∏.
–ò–∑–±–µ–≥–∞–π —Ä–æ–±–æ—Ç–æ–æ–±—Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ ‚Äî –∑–≤—É—á–∞—Ç—å –Ω—É–∂–Ω–æ –∂–∏–≤–æ.

üìå –û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∫–∞–Ω–¥–∏–¥–∞—Ç–∞:
–ï—Å–ª–∏ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç –æ –≤–∞–∫–∞–Ω—Å–∏–∏, –∫–æ–º–ø–∞–Ω–∏–∏ –∏–ª–∏ —É—Å–ª–æ–≤–∏—è—Ö ‚Äî –¥–∞–π —á—ë—Ç–∫–∏–π –∏ —É–º–µ—Å—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç.
–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ ‚Äî –ø—Ä–µ–¥–ª–æ–∂–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ HR.

‚úÖ –í –∫–æ–Ω—Ü–µ –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏:
–ü–æ–±–ª–∞–≥–æ–¥—Ä–∏ –∑–∞ —É—á–∞—Å—Ç–∏–µ, —Å–∫–∞–∂–∏, —á—Ç–æ —Å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–º —Å–≤—è–∂—É—Ç—Å—è –ø–æ–∑–∂–µ, –∏ –ø–æ–ø—Ä–æ—â–∞–π—Å—è –≤–µ–∂–ª–∏–≤–æ –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ.

- –ë—É–¥—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –∏ –≤–µ–∂–ª–∏–≤—ã–º.
- –ì–æ–≤–æ—Ä–∏ –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É.
- –≠—Ç–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ –∏–Ω—Ç–µ—Ä–≤—å—é, –∏–∑–±–µ–≥–∞–π –¥–ª–∏–Ω–Ω—ã—Ö –º–æ–Ω–æ–ª–æ–≥–æ–≤.`,
      },
    ],
  },
};

// üìä –°—Ö–µ–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
export const feedbackSchema = z.object({
  totalScore: z.number(),
  categoryScores: z.tuple([
    z.object({
      name: z.literal("–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –Ω–∞–≤—ã–∫–∏"),
      score: z.number(),
      comment: z.string(),
    }),
    z.object({
      name: z.literal("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è"),
      score: z.number(),
      comment: z.string(),
    }),
    z.object({
      name: z.literal("–£–º–µ–Ω–∏–µ —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏"),
      score: z.number(),
      comment: z.string(),
    }),
    z.object({
      name: z.literal("–ö—É–ª—å—Ç—É—Ä–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å"),
      score: z.number(),
      comment: z.string(),
    }),
    z.object({
      name: z.literal("–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ —è—Å–Ω–æ—Å—Ç—å"),
      score: z.number(),
      comment: z.string(),
    }),
  ]),
  strengths: z.array(z.string()), // –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã
  areasForImprovement: z.array(z.string()), // –ó–æ–Ω—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è
  finalAssessment: z.string(), // –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
});

// üñºÔ∏è –û–±–ª–æ–∂–∫–∏ –∫–æ–º–ø–∞–Ω–∏–π
export const interviewCovers = [
  "/5ka.png",
  "/ozon.png",
  "/samokat.png",
  "/sber.png",
  "/yandex.png",
  "/whoosh.png",
  "/vk.png",
  "/wildberries.png",
  "/telegram.png",
];

export const dummyInterviews: Interview[] = [
  {
    id: "1",
    userId: "user1",
    role: "Frontend Developer",
    type: "Technical",
    techstack: ["React", "TypeScript", "Next.js", "Tailwind CSS"],
    level: "Junior",
    questions: ["What is React?"],
    finalized: false,
    createdAt: "2024-03-15T10:00:00Z",
  },
  {
    id: "2",
    userId: "user1",
    role: "Full Stack Developer",
    type: "Mixed",
    techstack: ["Node.js", "Express", "MongoDB", "React"],
    level: "Senior",
    questions: ["What is Node.js?"],
    finalized: false,
    createdAt: "2024-03-14T15:30:00Z",
  },
];